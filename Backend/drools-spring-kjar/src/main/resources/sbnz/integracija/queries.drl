package sbnz.integracija;

import kusljic.mihajlo.sbnz.spring.backend.facts.AccountLock;
import kusljic.mihajlo.sbnz.spring.backend.facts.CarModel;
import kusljic.mihajlo.sbnz.spring.backend.facts.Conformance;
import kusljic.mihajlo.sbnz.spring.backend.facts.ConformanceType;
import kusljic.mihajlo.sbnz.spring.backend.facts.Observation;
import kusljic.mihajlo.sbnz.spring.backend.facts.ObservationType;
import kusljic.mihajlo.sbnz.spring.backend.facts.Recommendation

query "Fetch observations for car model" (CarModel $model)
	$o: Observation(carModel.getId().equals($model.getId()))
end

query "Fetch observations for car model and observation type" (CarModel $model, ObservationType $type)
	$o: Observation(carModel == $model, type == $type)
end

query "Fetch car model" (CarModel $model)
	$cm: CarModel(id.equals($model.getId()))
end

query "Fetch conformances"
	$c: Conformance()
end

query "Fetch conformances for car model and conformance type" (CarModel $model, ConformanceType $type)
	$c: Conformance(carModel == $model, type == $type)
end

query "Fetch recommendations"
	$r: Recommendation()
end

query "Fetch recommendations for car model" (CarModel $model)
	$r: Recommendation(carModel == $model)
end

query "Fetch all account locks"
	$al: AccountLock()
end

query "Fetch locks for account" (String $username)
	$al: AccountLock(username.equals($username))
end
