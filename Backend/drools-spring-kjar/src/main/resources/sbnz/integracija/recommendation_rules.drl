package sbnz.integracija;

import kusljic.mihajlo.sbnz.spring.backend.facts.CarModel;
import kusljic.mihajlo.sbnz.spring.backend.facts.RecommendationQuery;
import kusljic.mihajlo.sbnz.spring.backend.facts.Conformance;
import kusljic.mihajlo.sbnz.spring.backend.facts.ConformanceType;
import kusljic.mihajlo.sbnz.spring.backend.facts.Recommendation;

rule "Highly recommend"
	agenda-group "recommendations"
	when 
		$m: CarModel()
		and exists Conformance(type == ConformanceType.BUDGET_FRIENDLY, carModel == $m, $budgetScore: score)
		and exists Conformance(type == ConformanceType.SATISFIES_NEEDS, carModel == $m, $needsScore: score)
		and exists Conformance(type == ConformanceType.MAINTENANCE_FRIENDLY, carModel == $m, $maintenanceScore: score)
	then
		// insert( new Recommendation($m, ($budgetScore + $needsScore + $maintenanceScore) / 3) );
		insert( new Recommendation($m, 100) );
		System.out.println($m + " is recommended");
end;

rule "Recommend"
	agenda-group "recommendations"
	when 
		$m: CarModel()
		and exists Conformance(type == ConformanceType.BUDGET_FRIENDLY, carModel == $m, $budgetScore: score)
		and exists Conformance(type == ConformanceType.SATISFIES_NEEDS, carModel == $m, $needsScore: score)
	then
		insert( new Recommendation($m, 70) );
		System.out.println($m + " is recommended");
end;